"""Every element in the given list has two roles:
   1. as the element to disappear lastly
   2. as the boundary for the subarray if it will disappear lastly
"""
class Solution:
    def maxCoins(self, nums: List[int]) -> int:
        nums = [1] + [i for i in nums if i>0] + [1]
        n = len(nums)
        dp = [[0]*n for _ in range(n)]
    
        for k in range(2, n):
            for left in range(0, n-k):
                right = left + k
                for i in range(left+1, right):
                    dp[left][right] = max(dp[left][right], nums[left]*nums[i]*nums[right] + dp[left][i] + dp[i][right])
        return dp[0][n-1]

""" [3,1,5,8]: 167
[0, 0, 3, 0, 0, 0]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]

[0, 0, 3, 0, 0, 0]
[0, 0, 0, 15, 0, 0]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]

[0, 0, 3, 0, 0, 0]
[0, 0, 0, 15, 0, 0]
[0, 0, 0, 0, 40, 0]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]

[0, 0, 3, 0, 0, 0]
[0, 0, 0, 15, 0, 0]
[0, 0, 0, 0, 40, 0]
[0, 0, 0, 0, 0, 40]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]

[0, 0, 3, 30, 0, 0]
[0, 0, 0, 15, 0, 0]
[0, 0, 0, 0, 40, 0]
[0, 0, 0, 0, 0, 40]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]

[0, 0, 3, 30, 0, 0]
[0, 0, 0, 15, 135, 0]
[0, 0, 0, 0, 40, 0]
[0, 0, 0, 0, 0, 40]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]

[0, 0, 3, 30, 0, 0]
[0, 0, 0, 15, 135, 0]
[0, 0, 0, 0, 40, 48]
[0, 0, 0, 0, 0, 40]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]

[0, 0, 3, 30, 159, 0]
[0, 0, 0, 15, 135, 0]
[0, 0, 0, 0, 40, 48]
[0, 0, 0, 0, 0, 40]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]

[0, 0, 3, 30, 159, 0]
[0, 0, 0, 15, 135, 159]
[0, 0, 0, 0, 40, 48]
[0, 0, 0, 0, 0, 40]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]

[0, 0, 3, 30, 159, 167]
[0, 0, 0, 15, 135, 159]
[0, 0, 0, 0, 40, 48]
[0, 0, 0, 0, 0, 40]
[0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0]
"""